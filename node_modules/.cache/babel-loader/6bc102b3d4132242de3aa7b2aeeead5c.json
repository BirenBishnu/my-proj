{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/react project/burgerproject/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../hoc/axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nconst INGREDIENT_PRICES = {\n  salad: 5,\n  cheese: 10,\n  meat: 20,\n  bacon: 10\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 25,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      console.log(this.props); // this.setState({ loading: true });\n      // const order = {\n      //   ingredients: this.state.ingredients,\n      //   price: this.state.totalPrice,\n      //   customer: {\n      //     name: \"Aditya\",\n      //     address: {\n      //       street: \"Kankuri\",\n      //       zipcode: \"423109\",\n      //       country: \"India\",\n      //     },\n      //     email: \"adityac937@gmail.com\",\n      //   },\n      //   deliveryMethod: \"fastest\",\n      // };\n      // axios\n      //   .post(\"/orders.json\", order)\n      //   .then((response) => {\n      //     this.setState({ loading: false, purchasing: false });\n      //   })\n      //   .catch((error) => {\n      //     this.setState({ loading: false, purchasing: false });\n      //   });\n\n      this.props.history.push(\"/checkout\");\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://react-my-burger-ff590.firebaseio.com/ingredients.json\").then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    // const ingredients = {\n    //   ...this.state.ingredients,\n    // };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, \"Either Connect to Internet or There are no Ingredient to Show!\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    });\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        ordered: this.purchaseHandler,\n        purchasable: this.state.purchasable,\n        price: this.state.totalPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCanceled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/aditya/Desktop/react project/burgerproject/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","console","log","props","history","push","componentDidMount","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport axios from \"../../hoc/axios-orders\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nconst INGREDIENT_PRICES = {\n  salad: 5,\n  cheese: 10,\n  meat: 20,\n  bacon: 10,\n};\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: null,\n    totalPrice: 25,\n    purchasable: false,\n    purchasing: false,\n    loading: false,\n    error: false,\n  };\n  componentDidMount() {\n    axios\n      .get(\"https://react-my-burger-ff590.firebaseio.com/ingredients.json\")\n      .then((response) => {\n        this.setState({ ingredients: response.data });\n      })\n      .catch((error) => {\n        this.setState({ error: true });\n      });\n  }\n  updatePurchaseState(ingredients) {\n    // const ingredients = {\n    //   ...this.state.ingredients,\n    // };\n    const sum = Object.keys(ingredients)\n      .map((igKey) => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    this.setState({ purchasable: sum > 0 });\n  }\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceDeduction = INGREDIENT_PRICES[type];\n\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceDeduction;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false });\n  };\n  purchaseContinueHandler = () => {\n    console.log(this.props);\n    // this.setState({ loading: true });\n    // const order = {\n    //   ingredients: this.state.ingredients,\n    //   price: this.state.totalPrice,\n    //   customer: {\n    //     name: \"Aditya\",\n    //     address: {\n    //       street: \"Kankuri\",\n    //       zipcode: \"423109\",\n    //       country: \"India\",\n    //     },\n    //     email: \"adityac937@gmail.com\",\n    //   },\n    //   deliveryMethod: \"fastest\",\n    // };\n    // axios\n    //   .post(\"/orders.json\", order)\n    //   .then((response) => {\n    //     this.setState({ loading: false, purchasing: false });\n    //   })\n    //   .catch((error) => {\n    //     this.setState({ loading: false, purchasing: false });\n    //   });\n    this.props.history.push(\"/checkout\");\n  };\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients,\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n    let orderSummary = null;\n\n    let burger = this.state.error ? (\n      <p>Either Connect to Internet or There are no Ingredient to Show!</p>\n    ) : (\n      <Spinner />\n    );\n    if (this.state.ingredients) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.state.ingredients} />\n          <BuildControls\n            ingredientAdded={this.addIngredientHandler}\n            ingredientRemoved={this.removeIngredientHandler}\n            disabled={disabledInfo}\n            ordered={this.purchaseHandler}\n            purchasable={this.state.purchasable}\n            price={this.state.totalPrice}\n          />\n        </Aux>\n      );\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.state.ingredients}\n          price={this.state.totalPrice}\n          purchaseCanceled={this.purchaseCancelHandler}\n          purchaseContinued={this.purchaseContinueHandler}\n        />\n      );\n    }\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\nexport default withErrorHandler(BurgerBuilder, axios);\n"]},"metadata":{},"sourceType":"module"}