{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/react project/burgerproject/src/hoc/withErrorHandler/withErrorHandler.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Aux from \"../Aux/Aux\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        error: null\n      };\n\n      this.errorConfirmedHandler = () => {\n        this.setState({\n          error: null\n        });\n      };\n    }\n\n    componentWillMount() {\n      axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      axios.interceptors.response.use(res => res, error => {\n        this.setState({\n          error: error\n        });\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.error,\n        modalClosed: this.errorConfirmedHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, this.state.error ? this.state.error.message : null), /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withErrorHandler;","map":{"version":3,"sources":["/home/aditya/Desktop/react project/burgerproject/src/hoc/withErrorHandler/withErrorHandler.js"],"names":["React","Component","Modal","Aux","withErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","componentWillMount","interceptors","request","use","req","response","res","render","message","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAAmBC,KAAnB,KAA6B;AAAA;;AACpD,iBAAO,cAAcL,SAAd,CAAwB;AAAA;AAAA;AAAA,WAC7BM,KAD6B,GACrB;AACNC,QAAAA,KAAK,EAAE;AADD,OADqB;;AAAA,WAkB7BC,qBAlB6B,GAkBL,MAAM;AAC5B,aAAKC,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD,OApB4B;AAAA;;AAK7BG,IAAAA,kBAAkB,GAAG;AACnBL,MAAAA,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,GAAD,IAAS;AACtC,aAAKL,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,eAAOO,GAAP;AACD,OAHD;AAIAT,MAAAA,KAAK,CAACM,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CACGG,GAAD,IAASA,GADX,EAEGT,KAAD,IAAW;AACT,aAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACD,OAJH;AAMD;;AAMDU,IAAAA,MAAM,GAAG;AACP,0BACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,KADnB;AAEE,QAAA,WAAW,EAAE,KAAKC,qBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKF,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBW,OAApC,GAA8C,IAJjD,CADF,eAOE,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,CADF;AAWD;;AAlC4B,GAA/B;AAoCD,CArCD;;AAuCA,eAAehB,gBAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Aux from \"../Aux/Aux\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    state = {\n      error: null,\n    };\n\n    componentWillMount() {\n      axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n      axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error: error });\n        }\n      );\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({ error: null });\n    };\n\n    render() {\n      return (\n        <Aux>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </Aux>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n"]},"metadata":{},"sourceType":"module"}